{"version":3,"sources":["component/ResultList/resultList.module.css","pages/browse/browse.module.css","component/Banner/Banner.jsx","component/MovieDetail/MovieDetail.jsx","component/movieList/MovieList.jsx","component/navbar/Navbar.jsx","pages/browse/Browse.jsx","component/SearchForm/SearchForm.jsx","component/ResultList/ResultList.jsx","pages/search/Search.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Banner","props","useState","bannerMovies","setBannerMovies","useEffect","fetch","then","res","json","data","results","ramdomBanner","Math","floor","random","length","className","style","backgroundImage","backdrop_path","backgroundSize","height","original_name","overview","MovieDetail","videoLink","movie_id","movieId","imgMovie","movieImg","URL","videoMovies","setVideoMovies","fetchMovieData","useCallback","response","ok","Error","console","log","message","forEach","e","site","type","key","movieName","releaseDate","vote","details","width","src","alt","title","IMG_URL","MovieList","movies","setMovies","movieData","setMovieData","showDetail","setShowDetail","clickMovieId","setClickMovieId","ListName","map","movie","id","poster_path","name","onClick","movie_name","img","release_date","first_air_date","vote_average","Navbar","scroll","setScroll","window","addEventListener","scrollY","backgroundColor","href","fill","aria-hidden","data-prefix","data-icon","role","xmlns","viewBox","d","API_KEY","API_URL","requests","Browse","styles","browse","movieContainer","SearchForm","searchMovies","setSearchMovies","handleSearch","preventDefault","getInputData","trim","alert","placeholder","onChange","target","value","onKeyDown","ResultList","input","searchResults","setSearchResults","resultTitle","resultsList","item","imageSearch","notify","Search","inputData","setInputData","App","path","element","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","process","origin","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.baeae70e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchResults\":\"resultList_searchResults__3YVYn\",\"resultTitle\":\"resultList_resultTitle__3eDqS\",\"resultsList\":\"resultList_resultsList__3WaP6\",\"notify\":\"resultList_notify__3T3ou\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieContainer\":\"browse_movieContainer__1zaj2\"};","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport \"./banner.css\";\n\nconst IMG_API = \"https://image.tmdb.org/t/p/original\";\n\nfunction Banner(props) {\n  const [bannerMovies, setBannerMovies] = useState([]);\n\n  useEffect(() => {\n    fetch(props.props)\n      .then((res) => res.json())\n      .then((data) => {\n        const results = data.results;\n        const ramdomBanner =\n          results[Math.floor(Math.random() * results.length - 1)]; //lấy ngẫu nhiên một bộ phim trong array\n\n        setBannerMovies(ramdomBanner);\n      });\n  }, []);\n\n  return (\n    <>\n      <div\n        className=\"banner\"\n        style={{\n          backgroundImage: `url('${IMG_API + bannerMovies.backdrop_path}')`,\n          backgroundSize: \"cover\",\n          height: \"400px\",\n        }}\n      >\n        <div className=\"bannerDetail\">\n          <h1>{bannerMovies.original_name}</h1>\n          <div className=\"bannerDetailBtn\">\n            <button>Play</button>\n            <button>My List</button>\n          </div>\n          <p>{bannerMovies.overview}</p>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Banner;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./movieDetail.css\";\n\nconst API_KEY = \"cd5677141d00cbc212198f55116af499\";\nconst MovieDetail = (props) => {\n  const movie_id = props.movieId;\n  const imgMovie = \"https://image.tmdb.org/t/p/original\" + props.movieImg;\n  // lấy dữ liệu về trailer của bộ phim\n  const URL =\n    `https://api.themoviedb.org/3/movie/${movie_id}/videos?api_key=` + API_KEY;\n  const [videoMovies, setVideoMovies] = useState([]);\n  var videoLink;\n\n  const fetchMovieData = useCallback(async () => {\n    try {\n      const response = await fetch(URL);\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n      const data = await response.json();\n      // Lấy dữ liệu video trả về sau khi gọi API\n      setVideoMovies(data.results);\n      return data.results;\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, [URL]);\n\n  useEffect(() => {\n    fetchMovieData();\n  }, [fetchMovieData]);\n\n  //Kiểm tra và lấy dữ liệu data phù hợp\n  if (videoMovies.length !== 0) {\n    videoMovies.forEach((e) => {\n      if (\n        e.site === \"YouTube\" &&\n        (e.type === \"Trailer\" || e.type === \"Teaser\")\n      ) {\n        videoLink = \"https://www.youtube.com/embed/\" + e.key;\n      }\n      return;\n    });\n  }\n  return (\n    <div className=\"movieDetail\">\n      <div className=\"detailContent\">\n        <div className=\"detailTitle\">\n          <h2>{props.movieName}</h2>\n        </div>\n        <p>Release Date: {props.releaseDate}</p>\n        <p>Vote: {props.vote}</p>\n        <p>{props.details}</p>\n      </div>\n\n      <div className=\"detailVideo\">\n        {videoMovies.length === 0 ? (\n          <img\n            style={{ width: \"100%\", height: \"200px\" }}\n            src={imgMovie}\n            alt={props.movieName}\n            className=\"detailImage\"\n          />\n        ) : (\n          <iframe\n            title={props.movieName}\n            width=\"100%\"\n            height=\"170\"\n            src={videoLink}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetail;\n","import React, { useState, useEffect } from \"react\";\nimport MovieDetail from \"../MovieDetail/MovieDetail\";\nimport \"./movielist.css\";\n\nconst IMG_URL = `https://image.tmdb.org/t/p/original`;\n\nfunction MovieList(props) {\n  const [movies, setMovies] = useState([]);\n  const [movieData, setMovieData] = useState({});\n  const [showDetail, setShowDetail] = useState(false);\n  const [clickMovieId, setClickMovieId] = useState(null);\n\n  useEffect(() => {\n    fetch(props.props)\n      .then((res) => res.json())\n      .then((data) => {\n        setMovies(data.results);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"movieSection\">\n        {props.ListName !== \"Original\" ? <h2>{props.ListName}</h2> : <></>}\n        <div className=\"movieList\">\n          {movies.map((movie) => (\n            <img\n              key={movie.id}\n              src={\n                props.ListName !== \"Original\"\n                  ? IMG_URL + (movie.backdrop_path || movie.poster_path)\n                  : IMG_URL + movie.poster_path\n              }\n              alt={movie.name}\n              className=\"imgItem\"\n              onClick={() => {\n                //Lưu thông tin phim\n                setMovieData({\n                  movie_id: movie.id,\n                  movie_name: movie.title || movie.name,\n                  img: movie.backdrop_path || movie.poster_path,\n                  releaseDate: movie.release_date || movie.first_air_date,\n                  vote: movie.vote_average,\n                  details: movie.overview || \"No description available!\",\n                });\n                // Khi đang xem thông tin của một bộ phim, nếu người dùng click vào ảnh một bộ phim\n                // khác thì bạn sẽ hiển thị thông tin của bộ phim đó\n                if (clickMovieId === movie.id) {\n                  setShowDetail(!showDetail);\n                } else {\n                  setShowDetail(true);\n                }\n                setClickMovieId(movie.id);\n              }}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* Hiển thị thông tin cụ thể phim sau khi click */}\n      {showDetail && (\n        <MovieDetail\n          movieId={movieData.movie_id}\n          movieName={movieData.movie_name}\n          movieImg={movieData.img}\n          releaseDate={movieData.releaseDate}\n          vote={movieData.vote}\n          details={movieData.details}\n        />\n      )}\n    </>\n  );\n}\n\nexport default MovieList;\n","import React, { useState, useEffect } from \"react\";\nimport \"./navbar.css\";\n\nfunction Navbar() {\n  const [scroll, setScroll] = useState(true);\n\n  //hiệu ứng cuộn trang cho thanh navbar\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.scrollY >= 100) {\n        setScroll(false);\n      } else {\n        setScroll(true);\n      }\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  return (\n    <div className=\"navbar\" style={scroll ? {} : { backgroundColor: \"black\" }}>\n      {/* Khi click vào phần chữ \"Movie App\", người dùng sẽ được chuyển về trang chủ (\"/\"). */}\n\n      <a href=\"/\" className=\"navbarTitle\">\n        Movie App\n      </a>\n\n      {/* Khi click vào phần nút Search thì người dùng sẽ được chuyển về trang tìm kiếm (\"search\"). */}\n      <a href=\"/search\" className=\"iconSerach\">\n        <span>\n          {/* tạo ra icon cho nút Search */}\n          <svg\n            className=\"svg-inline--fa fa-search fa-w-16\"\n            fill=\"#ccc\"\n            aria-hidden=\"true\"\n            data-prefix=\"fas\"\n            data-icon=\"search\"\n            role=\"img\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 512 512\"\n          >\n            <path\n              d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1\n                            322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 \n                            17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128\n                            0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"\n            ></path>\n          </svg>\n        </span>\n      </a>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport Banner from \"../../component/Banner/Banner\";\nimport MovieList from \"../../component/movieList/MovieList\";\nimport Navbar from \"../../component/navbar/Navbar\";\nimport styles from \"./browse.module.css\";\n\nconst API_KEY = \"cd5677141d00cbc212198f55116af499\";\nconst API_URL = `https://api.themoviedb.org/3`;\n//Lấy dữ liệu từ API\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n  fetchSearch: `/search/movie?api_key=${API_KEY}&language=en-US`,\n};\n// hiển thị các danh mục phim , mỗi danh mục tương ứng với một API Endpoint:\nfunction Browse() {\n  return (\n    <div className={styles.browse}>\n      <Navbar />\n      <Banner props={API_URL + requests.fetchNetflixOriginals} />\n\n      <div className={styles.movieContainer}>\n        <div>\n          <MovieList\n            props={API_URL + requests.fetchNetflixOriginals}\n            ListName=\"Original\"\n          />\n          <MovieList\n            props={API_URL + requests.fetchTrending}\n            ListName=\"Xu hướng\"\n          />\n          <MovieList\n            props={API_URL + requests.fetchTopRated}\n            ListName=\"Xếp hạng cao\"\n          />\n          <MovieList\n            props={API_URL + requests.fetchActionMovies}\n            ListName=\"Hành động\"\n          />\n          <MovieList\n            props={API_URL + requests.fetchComedyMovies}\n            ListName=\"Hài\"\n          />\n          <MovieList\n            props={API_URL + requests.fetchHorrorMovies}\n            ListName=\"Kinh dị\"\n          />\n          <MovieList\n            props={API_URL + requests.fetchRomanceMovies}\n            ListName=\"Lãng mạn\"\n          />\n          <MovieList\n            props={API_URL + requests.fetchDocumentaries}\n            ListName=\"Tài liệu\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Browse;\n","import React, { useState } from \"react\";\nimport \"./searchform.css\";\n\nfunction SearchForm(props) {\n  const [searchMovies, setSearchMovies] = useState(\"\");\n  const handleChangeInput = (e) => {\n    setSearchMovies(e.target.value);\n  };\n  //resetForm\n  const handleReset = (e) => {\n    e.preventDefault();\n    setSearchMovies(\"\");\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    props.getInputData(searchMovies);\n\n    // thông báo khi người dùng không nhập gì\n    if (searchMovies.trim() === \"\") {\n      alert(\"vui lòng nhập tên phim!\");\n      props.getInputData(\"\");\n    }\n  };\n  //dùng Enter với search\n  const handleKey = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      props.getInputData(searchMovies);\n    }\n  };\n\n  return (\n    <div className=\"searchForm\">\n      <div className=\"wrapper\">\n        <form>\n          <div className=\"inputForm\">\n            <input\n              type=\"text\"\n              placeholder=\"Please input keyword\"\n              onChange={handleChangeInput}\n              onKeyDown={handleKey}\n              value={searchMovies}\n            ></input>\n            <span onClick={handleSearch}>\n              <svg\n                className=\"svg-inline--fa fa-search fa-w-16\"\n                fill=\"#ccc\"\n                aria-hidden=\"true\"\n                data-prefix=\"fas\"\n                data-icon=\"search\"\n                role=\"img\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 512 512\"\n              >\n                <path\n                  d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1\n                                        322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 \n                                        17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128\n                                        0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"\n                ></path>\n              </svg>\n            </span>\n          </div>\n\n          <div className=\"buttonFrom\">\n            <button className=\"btnReset\" onClick={handleReset}>\n              RESET\n            </button>\n            <button className=\"btnSearch\" onClick={handleSearch}>\n              SEARCH\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default SearchForm;\n","import React, { useEffect, useState } from \"react\";\nimport MovieDetail from \"../MovieDetail/MovieDetail\";\nimport styles from \"./resultList.module.css\";\n\nconst IMG_PATH = `https://image.tmdb.org/t/p/original`;\nconst API_KEY = \"cd5677141d00cbc212198f55116af499\";\n\nfunction ResultList(props) {\n  const input = props.input || \"\";\n  const URL =\n    \"https://api.themoviedb.org/3/search/movie?api_key=\" +\n    API_KEY +\n    \"&language=en-US&page=1&query=\" +\n    input;\n\n  const [searchResults, setSearchResults] = useState([]); //Hiển thị kết quả trả về khi tìm kiếm\n  const [movieData, setMovieData] = useState({}); // Thông tin phim khi người dùng click vào\n  const [showDetail, setShowDetail] = useState(false); //Ẩn/hiện khi click vào phim\n  const [clickMovieId, setClickMovieId] = useState(null); //So sánh id của phim cũ và phim mới mỗi khi click vào phim khác\n\n  useEffect(() => {\n    if (input) {\n      fetch(URL)\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data);\n          setSearchResults(data.results);\n        });\n    }\n  }, [input, URL]);\n  return (\n    <div className={styles.searchResults}>\n      <h3 className={styles.resultTitle}>Search Result</h3>\n      <div className={styles.resultsList}>\n        {searchResults.length > 0 ? (\n          searchResults.map(\n            (item) =>\n              item.poster_path && (\n                <img\n                  className={styles.imageSearch}\n                  key={item.id}\n                  src={IMG_PATH + item.poster_path}\n                  alt={item.title}\n                  onClick={() => {\n                    setMovieData({\n                      // Lưu trữ thông tin của phim\n                      movieId: item.id,\n                      movieName: item.title,\n                      img: item.backdrop_path,\n                      releaseDate: item.release_date || item.first_air_date,\n                      vote: item.vote_average,\n                      details:\n                        item.overview || \"This movie have no description.\",\n                    });\n\n                    setShowDetail(!showDetail);\n\n                    // Khi đang xem thông tin của một bộ phim, nếu người dùng click vào ảnh một bộ phim\n                    // khác thì bạn sẽ hiển thị thông tin của bộ phim đó\n                    if (clickMovieId === item.id) {\n                      setShowDetail(!showDetail);\n                    } else {\n                      setShowDetail(true);\n                    }\n                    setClickMovieId(item.id);\n                  }}\n                />\n              )\n          )\n        ) : (\n          <div className={styles.notify}>No Result</div>\n        )}\n      </div>\n\n      {/* Hiển thị thông tin cụ thể của phim khi click */}\n      {showDetail && (\n        <MovieDetail\n          movieId={movieData.movieId}\n          movieName={movieData.movieName}\n          movieImg={movieData.img}\n          releaseDate={movieData.releaseDate}\n          vote={movieData.vote}\n          details={movieData.details}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default ResultList;\n","import React from 'react';\nimport { useState } from 'react';\nimport Navbar from '../../component/navbar/Navbar';\nimport SearchForm from '../../component/SearchForm/SearchForm';\nimport ResultList from '../../component/ResultList/ResultList';\nimport './search.css'\n\nconst Search = () => {\n\tconst [inputData, setInputData] = useState(null);\n\n\tconst getInputData = (data) => {\n\t\tsetInputData(data);\n\t};\n\n\treturn (\n\t\t<div className='search'>\n\t\t\t<Navbar />\n\t\t\t<SearchForm getInputData={getInputData}/>\n\t\t\t<ResultList input={inputData === !inputData ? \"\" : inputData} />\n\t\t</div>\n\t);\n};\n\nexport default Search;\n","import React from 'react';\nimport {\n\tBrowserRouter,\n\tRoutes,\n\tRoute,\n} from \"react-router-dom\";\n\nimport Browse from './pages/browse/Browse';\nimport Search from './pages/search/Search';\n\n\nfunction App() {\n\treturn (\n\t\t<BrowserRouter>\n\t\t  <Routes>\n\t\t\t<Route path=\"/\" element={<Browse/>}/>\n\t\t\t<Route path=\"/search\" element={<Search/>}/>\n\t\t  </Routes>\n\t\t</BrowserRouter>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}